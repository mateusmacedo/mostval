# Message Broker - RabbitMQ
# Consolidated messaging infrastructure for Mostval
# Includes: RabbitMQ deployment, service, and configuration

---
# RabbitMQ Secret
apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq-secret
  namespace: mostval
  labels:
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/component: message-broker
    app.kubernetes.io/part-of: mostval
type: Opaque
data:
  rabbitmq-password: bGlkZXJhbmNhMTIz  # mostval123
  erlang-cookie: bGlkZXJhbmNhX2Nvb2tpZQ==  # mostval_cookie

---
# RabbitMQ Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-config
  namespace: mostval
  labels:
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/component: message-broker
    app.kubernetes.io/part-of: mostval
data:
  rabbitmq.conf: |
    listeners.tcp.default = 5672
    management.tcp.port = 15672
    vm_memory_high_watermark.relative = 0.6
    disk_free_limit.absolute = 1GB
    log.console = true
    log.console.level = info
    log.file = false
    default_user_tags.administrator = true
    default_permissions.configure = .*
    default_permissions.read = .*
    default_permissions.write = .*
    heartbeat = 60
    frame_max = 131072
    channel_max = 2047
  definitions.json: |
    {
      "rabbit_version": "3.12.0",
      "rabbitmq_version": "3.12.0",
      "users": [
        {
          "name": "mostval",
          "password_hash": "mostval123",
          "hashing_algorithm": "rabbit_password_hashing_sha256",
          "tags": "administrator"
        }
      ],
      "vhosts": [
        {
          "name": "mostval_sites"
        }
      ],
      "permissions": [
        {
          "user": "mostval",
          "vhost": "mostval_sites",
          "configure": ".*",
          "write": ".*",
          "read": ".*"
        }
      ],
      "exchanges": [
        {
          "name": "mostval.notifications",
          "vhost": "mostval_sites",
          "type": "topic",
          "durable": true,
          "auto_delete": false
        },
        {
          "name": "mostval.events",
          "vhost": "mostval_sites",
          "type": "topic",
          "durable": true,
          "auto_delete": false
        }
      ],
      "queues": [
        {
          "name": "notifications.email",
          "vhost": "mostval_sites",
          "durable": true,
          "auto_delete": false,
          "arguments": {
            "x-message-ttl": 3600000
          }
        },
        {
          "name": "notifications.sms",
          "vhost": "mostval_sites",
          "durable": true,
          "auto_delete": false,
          "arguments": {
            "x-message-ttl": 3600000
          }
        },
        {
          "name": "events.audit",
          "vhost": "mostval_sites",
          "durable": true,
          "auto_delete": false
        }
      ],
      "bindings": [
        {
          "source": "mostval.notifications",
          "vhost": "mostval_sites",
          "destination": "notifications.email",
          "destination_type": "queue",
          "routing_key": "email.*"
        },
        {
          "source": "mostval.notifications",
          "vhost": "mostval_sites",
          "destination": "notifications.sms",
          "destination_type": "queue",
          "routing_key": "sms.*"
        },
        {
          "source": "mostval.events",
          "vhost": "mostval_sites",
          "destination": "events.audit",
          "destination_type": "queue",
          "routing_key": "audit.*"
        }
      ]
    }

---
# RabbitMQ Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  namespace: mostval
  labels:
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/component: message-broker
    app.kubernetes.io/part-of: mostval
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: rabbitmq
  template:
    metadata:
      labels:
        app.kubernetes.io/name: rabbitmq
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        fsGroup: 999
      initContainers:
      - name: fix-permissions
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          chown -R 999:999 /var/lib/rabbitmq
          chmod 600 /var/lib/rabbitmq/.erlang.cookie || true
        volumeMounts:
        - name: rabbitmq-data
          mountPath: /var/lib/rabbitmq
        securityContext:
          runAsUser: 0
          runAsNonRoot: false
      containers:
      - name: rabbitmq
        image: rabbitmq:3.12-management-alpine
        ports:
        - containerPort: 5672
          name: amqp
        - containerPort: 15672
          name: management
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: "mostval"
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: rabbitmq-password
        - name: RABBITMQ_DEFAULT_VHOST
          value: "mostval_sites"
        - name: RABBITMQ_ERLANG_COOKIE
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: erlang-cookie
        - name: RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS
          value: "-rabbit log_levels [{connection,error},{default,info}]"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        volumeMounts:
        - name: rabbitmq-data
          mountPath: /var/lib/rabbitmq
        - name: rabbitmq-config
          mountPath: /etc/rabbitmq/rabbitmq.conf
          subPath: rabbitmq.conf
        - name: rabbitmq-definitions
          mountPath: /etc/rabbitmq/definitions.json
          subPath: definitions.json
        livenessProbe:
          exec:
            command:
            - rabbitmq-diagnostics
            - ping
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - rabbitmq-diagnostics
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 999
          capabilities:
            drop:
            - ALL
      volumes:
      - name: rabbitmq-data
        persistentVolumeClaim:
          claimName: rabbitmq-pvc
      - name: rabbitmq-config
        configMap:
          name: rabbitmq-config
      - name: rabbitmq-definitions
        configMap:
          name: rabbitmq-config

---
# RabbitMQ PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rabbitmq-pvc
  namespace: mostval
  labels:
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/component: message-broker
    app.kubernetes.io/part-of: mostval
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-path

---
# RabbitMQ Service
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: mostval
  labels:
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/component: message-broker
    app.kubernetes.io/part-of: mostval
spec:
  type: ClusterIP
  ports:
  - port: 5672
    targetPort: 5672
    protocol: TCP
    name: amqp
  - port: 15672
    targetPort: 15672
    protocol: TCP
    name: management
  selector:
    app.kubernetes.io/name: rabbitmq
