# Identity and Access Management - Keycloak
# Consolidated identity provider for Mostval
# Includes: Keycloak deployment, service, and configuration

---
# Keycloak Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-config
  namespace: mostval
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/component: identity-provider
    app.kubernetes.io/part-of: mostval
data:
  KC_DB: "postgres"
  KC_DB_URL: "jdbc:postgresql://postgresql:5432/keycloak"
  KC_DB_USERNAME: "mostval"
  KC_DB_PASSWORD: "mostval123"
  KC_HOSTNAME_STRICT: "false"
  KC_HOSTNAME_STRICT_HTTPS: "false"
  KC_HTTP_ENABLED: "true"
  KC_HEALTH_ENABLED: "true"
  KC_METRICS_ENABLED: "true"
  KC_PROXY: "edge"
  KC_LOG_LEVEL: "INFO"

---
# Keycloak Secret
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-secret
  namespace: mostval
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/component: identity-provider
    app.kubernetes.io/part-of: mostval
type: Opaque
data:
  admin-password: YWRtaW4xMjM=  # admin123 base64
  admin-user: YWRtaW4=  # admin base64

---
# Keycloak Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: mostval
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/component: identity-provider
    app.kubernetes.io/part-of: mostval
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: keycloak
  template:
    metadata:
      labels:
        app.kubernetes.io/name: keycloak
    spec:
      containers:
      - name: keycloak
        image: quay.io/keycloak/keycloak:22.0.5
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: KEYCLOAK_ADMIN
          valueFrom:
            secretKeyRef:
              name: keycloak-secret
              key: admin-user
        - name: KEYCLOAK_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-secret
              key: admin-password
        - name: KC_DB
          valueFrom:
            configMapKeyRef:
              name: keycloak-config
              key: KC_DB
        - name: KC_DB_URL
          valueFrom:
            configMapKeyRef:
              name: keycloak-config
              key: KC_DB_URL
        - name: KC_DB_USERNAME
          valueFrom:
            configMapKeyRef:
              name: keycloak-config
              key: KC_DB_USERNAME
        - name: KC_DB_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: keycloak-config
              key: KC_DB_PASSWORD
        - name: KC_HOSTNAME_STRICT
          valueFrom:
            configMapKeyRef:
              name: keycloak-config
              key: KC_HOSTNAME_STRICT
        - name: KC_HOSTNAME_STRICT_HTTPS
          valueFrom:
            configMapKeyRef:
              name: keycloak-config
              key: KC_HOSTNAME_STRICT_HTTPS
        - name: KC_HTTP_ENABLED
          valueFrom:
            configMapKeyRef:
              name: keycloak-config
              key: KC_HTTP_ENABLED
        - name: KC_HEALTH_ENABLED
          valueFrom:
            configMapKeyRef:
              name: keycloak-config
              key: KC_HEALTH_ENABLED
        - name: KC_METRICS_ENABLED
          valueFrom:
            configMapKeyRef:
              name: keycloak-config
              key: KC_METRICS_ENABLED
        - name: KC_PROXY
          valueFrom:
            configMapKeyRef:
              name: keycloak-config
              key: KC_PROXY
        - name: KC_LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: keycloak-config
              key: KC_LOG_LEVEL
        command: ["/opt/keycloak/bin/kc.sh", "start-dev"]
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health/ready
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 12

---
# Keycloak Service
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  namespace: mostval
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/component: identity-provider
    app.kubernetes.io/part-of: mostval
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: keycloak
